import com.modrinth.minotaur.TaskModrinthUpload

plugins {
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id 'com.matthewprenger.cursegradle'
    id "com.modrinth.minotaur"
    // Dokka docs
    id "org.jetbrains.kotlin.jvm"
    id("org.jetbrains.dokka")
}

repositories {
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    maven {
        url 'https://masa.dy.fi/maven'
    }
}

architectury {
    platformSetupLoomIde()
    fabric()
}

configurations {
    common
    shadowCommon // Don't use shadow from the shadow plugin because we don't want IDEA to index this.
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentFabric.extendsFrom common

}

def ENV = System.getenv();

dependencies {
    modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${rootProject.fabric_version}"

    // C2B
    modImplementation(include("com.github.samolego.Config2Brigadier:config2brigadier-fabric:${rootProject.c2b_version}"))

    // Permission API
    modImplementation(include('me.lucko:fabric-permissions-api:0.1-SNAPSHOT'))

    // Server translations
    modImplementation include("fr.catcore:server-translations-api:1.4.12+1.18.2")

    // SGUI
    modImplementation(include("eu.pb4:sgui:${rootProject.sgui_version}"))

    // Carpet
    //modImplementation("carpet:fabric-carpet:${rootProject.minecraft_version}-${project.carpet_core_version}")
    //modCompileOnly("carpet:fabric-carpet:1.18-pre4-${project.carpet_core_version}")
    // Masa's maven is down atm
    modImplementation "com.github.gnembon:fabric-carpet:${project.carpet_core_version}"

    common(project(path: ":common", configuration: "namedElements")) { transitive false }
    shadowCommon(project(path: ":common", configuration: "transformProductionFabric")) { transitive false }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowCommon]
    classifier "dev-shadow"
}

remapJar {
    input.set shadowJar.archiveFile
    dependsOn shadowJar
    classifier "fabric"
}

jar {
    classifier "dev"
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

components.java {
    withVariantsFromConfiguration(project.configurations.shadowRuntimeElements) {
        skip()
    }
}

publishing {
    publications {
        mavenFabric(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            from components.java
        }
        mavenJava(MavenPublication) {
            artifactId = rootProject.archives_base_name + "-" + project.name
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                classifier null
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/samolego/Taterzens")
            credentials {
                username = ENV.USERNAME
                password = ENV.PASSWORD
            }
        }
        // uncomment to publish to the local maven
        mavenLocal()
    }

}

tasks.withType(dokkaHtmlPartial.getClass()).configureEach {
    pluginsMapConfiguration.set(
            ["org.jetbrains.dokka.base.DokkaBase": """{ "separateInheritedMembers": true}"""]
    )
}


// from FAPI https://github.com/FabricMC/fabric/blob/1.16/build.gradle
curseforge {
    if (ENV.CURSEFORGE_API_KEY) {
        apiKey = ENV.CURSEFORGE_API_KEY
    }

    project {
        id = "446499"
        changelog = ENV.CHANGELOG ?: "A changelog can be found at https://github.com/samolego/Taterzens/releases/tag/${version}"
        releaseType = "release"
        addGameVersion "${project.minecraft_version}"
        addGameVersion "Fabric"

        mainArtifact(file("${project.buildDir}/libs/${archivesBaseName}-${version}-fabric.jar")) {
            displayName = "[${project.minecraft_version}] Taterzens ${version}"
        }

        afterEvaluate {
            uploadTask.dependsOn("remapJar")
        }
    }

    options {
        forgeGradleIntegration = false
    }
}

task modrinth(type: TaskModrinthUpload, dependsOn: remapJar) {
    onlyIf {
        ENV.MODRINTH_TOKEN
    }

    token = ENV.MODRINTH_TOKEN
    projectId = "vE972Kux"
    versionNumber = project.minecraft_version + "+" + version + "-fabric"
    changelog = ENV.CHANGELOG ?: "A changelog can be found at https://github.com/samolego/Taterzens/releases/tag/${version}"
    versionName = "[${project.minecraft_version}] Taterzens ${version} [Fabric]"
    releaseType = "release"

    uploadFile = file("${project.buildDir}/libs/${archivesBaseName}-${version}-fabric.jar")

    addGameVersion("${project.minecraft_version}")
    addLoader('fabric')
}
